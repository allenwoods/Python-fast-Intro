#+TITLE:（每天）2小时上手Python-0
#+AUTHOR: Allen Woods

网上已经有许多非常好的Python教程了，比如 [[http://www.liaoxuefeng.com/][廖雪峰的Python教程]], [[http://learnpythonthehardway.org/][Learn Python The Hard Way]] 等等。那为什么还要再写一份教程呢？因为平时接触到的同学里，有许多人并不是CS专业，对编程毫无兴趣，但由于种种原因又不得不写点代码来完成一些自动化的工作。对于他们来说，花上几周时间学习编程，投入的性价比不高，而且缺乏及时的反馈，很快就失去了学习的兴趣。本教程想要帮助他们快速地掌握一门语言，并且能立刻用编程的方式提高工作效率。

注意：本教程是针对非码农的入门文章，因此不会有任何深入的技术细节讨论。专业人士(包括有志于成为专业人士的同学)可以关闭页面了。使用Python作为示范(不要问为什么...), 但是我想类似的学习流程也适用于其他语言.

* 内容纲要
本教程计划覆盖的内容有:
1. Python的环境配置、常用工具和基本语法
2. 常用功能和编程基本思想
3. 项目建立和库的调用(request/pandas)
4. 科学计算和可视化初步(numpy/matplotlib)
更多内容会视情况添加，不过如果掌握了以上的内容，基本也就具备独立学习和解决问题的能力了。

* 学习指南
每一部分内容会包括理论、技术和练习三部分。学习时先快速将理论和技术浏览一遍（小节标题会标注所需要的时间），之后根据提供的cheatsheet完成练习。

** 学习区和及时反馈
有一种理论认为, 面对新事物时, 人的心理存在三个区域: 
1. 舒适区. 某种技能已经可以熟练应用, 且能带来稳定回报时(得到的回报大于投入的成本), 面对使用这种技能可以解决的问题,人的心理处于舒适区.
2. 学习区.某种技能还未掌握, 使用该技能的回报小于等于投入的成本, 但能明确随着技能熟练度的提高, 回报最终会大于成本时, 人的心理处于学习区.
3. 恐慌区. 某种技能回报小于投入成本, 且不能明确未来回报最终会大于成本, 人的心理处于恐慌区.

在编程这件事情上, 许多人的心理处于恐慌区和学习区交接的边缘, 即知道如果掌握这门技能, 那么最终的回报必然大于投入, 但是不确定需要在这一过程中投入多少(编程好难啊, 我能学得会吗...诸如此类). 
解决这一问题的方法就是 *及时反馈*. 如果能够在每次学习中及时了解自己的进步, 那么学习的兴趣就很容易维持, 而且随着这个过程, 能够忍受的反馈时间也越来越长. *因此请一定不要再阅读文字上花太多时间, 尽快开始Coding!*

** 刻意练习
一个月打一小时球和在培训班一次学习12小时, 对一个人球技的提高是有很大不同的. 在某一领域成为专家, 需要在短时间大量练习才能将所学的内容内化成一种思维方式. *因此请不要分散学习, 一定要保证在连续的时间内将教程过一遍!* 这也是本教程为什么这么短的原因: 一天的时间足以完成全部内容(真的不是因为懒...).
